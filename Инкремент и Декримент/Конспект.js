//Допустим, начальное значение переменной a = 3:

// Операция	       Возвращаемое значение	      Значение a после операции
// ++a (префикс)	            4	                            4
// a++ (постфикс)	            3	                            4
// --a (префикс)	            2	                            2
// a-- (постфикс)	            3	                            2

// Префикс (++x) → «Сначала измени, потом используй».
// Пример: y = ++x → «Увеличь x, потом присвой y».
// Постфикс (x++) → «Используй оригинал, потом измени».
// Пример: y = x++ → «Возьми текущий x для y, потом увеличь x».

let a11 = 10;
let b11 = a11++; // постфиксный инкремент
console.log(b11); // 10
console.log(a11); // 11

let a1 = 10;
let b1 = a1--; // постфиксный декремент
console.log(b1); // 10
console.log(a1); // 9

let c9 = 10;
let d9 = ++c9; // префиксный инкремент
console.log(c9); // 11
console.log(d9); // 11

let c = 10;
let d = --c; // префексный декремент
console.log(c); // 9
console.log(d); // 9

// Комбинация операций
let x = 2;
let y = x++ + ++x;
// Разбираем по шагам:
// 1. x++ → возвращает 2, x становится 3
// 2. ++x → x увеличивается до 4, возвращает 4
// y = 2 + 4 → 6
console.log(y); // 6

// Вложенные операции
let a = 5;
let b = ++a + a--;
// Шаг 1: ++a → a = 6, возвращает 6
// Шаг 2: a-- → возвращает 6 (текущее значение), потом a = 5
// b = 6 + 6 → 12
console.log(b); // 12

// Постфикс в условии цикла
let i = 0;
while (i++ < 3) {
	console.log(i);
}
// Вывод: 1, 2, 3
// Почему?
// Проверка условия происходит так:
// i < 3 → true, потом i увеличивается на 1.
// Последняя итерация:
// i = 2 → условие 2 < 3 → true → i становится 3 → выводим 3.
// Затем i = 3 → условие 3 < 3 → false → выход.

// Путаница с приоритетом
let xx = 5;
let yy = x++ * 2;
// x++ возвращает 5 → y = 5 * 2 = 10
// Потом x становится 6
console.log(yy); // 10

// Нарисуйте таблицу для этого кода:
let aa = 4;
let bb = --a + a++ - a--;
// Шаг 1: --a → a = 3, возвращает 3
// Шаг 2: a++ → возвращает 3, потом a = 4
// Шаг 3: a-- → возвращает 4, потом a = 3
// b = 3 + 3 - 4 → 2
console.log(bb); // 2

let j = 0;

j++; // j = j + 1 (0 + 1) = 1
console.log(j); // 1

j--; // j = j - 1 (1 - 1) = 0
console.log(j); // 0

console.log(j++); // 0
console.log(j); // 1
console.log(j++ + 10); // 11
console.log(j); // 2

++j; //
console.log(j); // 3
console.log(++j); // 4
console.log(++j * 2); // j + 1 = 5 * 2 = 10 (приоритет у ++j выше *)
console.log(j); // 5

j += 5; // j = j + 5
console.log(j); // 10

j -= 5; // j = j - 5
console.log(j); // 5

j *= 3;
console.log(j); // 15
