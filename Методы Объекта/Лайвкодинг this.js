//  –õ–∞–π–≤–∫–æ–¥–∏–Ω–≥ - this --- –ß—Ç–æ —Å–ª–µ–≤–∞ –æ—Ç —Ç–æ—á–∫–∏ ‚Äî —Ç–æ –∏ –µ—Å—Ç—å this!

// 1 --- –°—Ç—Ä–µ–ª–∫–∞ –Ω–∞ –æ–¥–Ω–æ–º —É—Ä–æ–≤–Ω–µ —Å name
const person = {
	name: 'Alice',
	// greet ‚Äî —Å—Ç—Ä–µ–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞ –≤–µ—Ä—Ö–Ω–µ–º —É—Ä–æ–≤–Ω–µ –æ–±—ä–µ–∫—Ç–∞!
	greet: () => {
		// this —Ç—É—Ç –ù–ï —Å—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ person!
		// this –≤–∑—è—Ç –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
		console.log(this.name); // <-- undefined
	},
};

person.greet(); // undefined
// –ü–æ—Ç–æ–º—É —á—Ç–æ this –≤–Ω—É—Ç—Ä–∏ —Å—Ç—Ä–µ–ª–∫–∏ ‚Äî –Ω–µ –æ–±—ä–µ–∫—Ç person!

/**
    –°—Ç—Ä–µ–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è greet –ù–ï —Å–æ–∑–¥–∞—ë—Ç —Å–≤–æ–π this, –∞ –±–µ—Ä—ë—Ç –µ–≥–æ –∏–∑ –≤–Ω–µ—à–Ω–µ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è 
    (–æ–±—ã—á–Ω–æ —ç—Ç–æ –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç –∏–ª–∏ undefined).
    –í–Ω—É—Ç—Ä–∏ –æ–±—ä–µ–∫—Ç–∞ —Å—Ç—Ä–µ–ª–∫–∞ –ù–ï –∑–∞—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç person –∫–∞–∫ –∫–æ–Ω—Ç–µ–∫—Å—Ç.
 */

// 2 --- –°—Ç—Ä–µ–ª–∫–∞ –≤–Ω—É—Ç—Ä–∏ –º–µ—Ç–æ–¥–∞ (–Ω–∞ —É—Ä–æ–≤–µ–Ω—å –Ω–∏–∂–µ !):
const personUp = {
	name: 'Alice',
	greet() {
		// this —Ç—É—Ç ‚Äî —ç—Ç–æ –æ–±—ä–µ–∫—Ç person!
		// –û–±—ä—è–≤–ª—è–µ–º —Å—Ç—Ä–µ–ª–∫—É –í–ù–£–¢–†–ò –æ–±—ã—á–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞
		const innerArrow = () => {
			// –°—Ç—Ä–µ–ª–∫–∞ –∑–∞–º—ã–∫–∞–µ—Ç (–∑–∞–ø–æ–º–∏–Ω–∞–µ—Ç) this –∏–∑ –º–µ—Ç–æ–¥–∞ greet
			// –¢–µ–ø–µ—Ä—å this —Ç—É—Ç = this –∏–∑ greet, –∞ –∑–Ω–∞—á–∏—Ç = person
			console.log(this.name); // <-- 'Alice'
		};
		innerArrow();
	},
};

personUp.greet(); // Alice
// –ó–¥–µ—Å—å this –≤–Ω—É—Ç—Ä–∏ —Å—Ç—Ä–µ–ª–∫–∏ = –æ–±—ä–µ–∫—Ç person, –ø–æ—Ç–æ–º—É —á—Ç–æ —Å—Ç—Ä–µ–ª–∫–∞ –∑–∞–º–∫–Ω—É–ª–∞ –µ–≥–æ –∏–∑ greet

/**
    –û–±—ã—á–Ω—ã–π –º–µ—Ç–æ–¥ greet –ø–æ–ª—É—á–∞–µ—Ç this –∫–∞–∫ –æ–±—ä–µ–∫—Ç person (—á–µ—Ä–µ–∑ –≤—ã–∑–æ–≤ person.greet()).
    –°—Ç—Ä–µ–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è innerArrow –∑–∞–º—ã–∫–∞–µ—Ç this –º–µ—Ç–æ–¥–∞ greet, —Ç–æ –µ—Å—Ç—å –≤–∏–¥–∏—Ç —Ç–æ—Ç –∂–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç!
    –ò–º–µ–Ω–Ω–æ —Ç–∞–∫ —Å—Ç—Ä–µ–ª–∫–∏ –æ–±—ã—á–Ω–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –≤–Ω—É—Ç—Ä–∏ –º–µ—Ç–æ–¥–æ–≤ ‚Äî —á—Ç–æ–±—ã –Ω–µ —Ç–µ—Ä—è—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç!
 */

// –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç bind, –µ—Å–ª–∏ –¥–µ–ª–∞—Ç—å bind –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑
const userBind = {
	name: 'Bob',
	sayHi() {
		console.log(this.name);
	},
	sayHiArrow: () => {
		console.log(this.name);
	},
};

// --- "–û—Ç–æ—Ä–≤–∞–ª–∏" –º–µ—Ç–æ–¥—ã –æ—Ç –æ–±—ä–µ–∫—Ç–∞:
const hi = userBind.sayHi;
const sayHiArrow = userBind.sayHiArrow;

// --- bind ‚Äî –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º this –∫ user:
const hiBinded = userBind.sayHi.bind(userBind);

// --- –í—Ç–æ—Ä–æ–π bind! –ü—Ä–æ–±—É–µ–º –ø–æ–º–µ–Ω—è—Ç—å this –Ω–∞ { name: 'Peter' }
const hiBindedSecond = hiBinded.sayHi.bind({ name: 'Peter' }); // —É hiBinded –Ω–µ—Ç —Å–≤–æ–π—Å—Ç–≤–∞ sayHi!
// –±—É–¥–µ—Ç –û–®–ò–ë–ö–ê —É–∂–µ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å—Ç—Ä–æ–∫–∏

// --- –í—ã–∑–æ–≤—ã:
hiBinded(); // { name: 'Bob' }
hiBindedSecond(); // TypeError

/*
    –í–ê–ñ–ù–û! hiBinded ‚Äî —ç—Ç–æ —É–∂–µ –ù–ï –æ–±—ä–µ–∫—Ç —Å –º–µ—Ç–æ–¥–æ–º, –∞ –æ–±—ã—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è.
    hiBinded.sayHi ‚Äî undefined (—É —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ—Ç —Å–≤–æ–π—Å—Ç–≤–∞ sayHi!)
    –ü–æ–ø—ã—Ç–∫–∞ —Å–¥–µ–ª–∞—Ç—å hiBinded.sayHi.bind(...) –ø—Ä–∏–≤–µ–¥—ë—Ç –∫ –æ—à–∏–±–∫–µ:
    TypeError: Cannot read properties of undefined (reading 'bind')
 */

// bind —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç this –ù–ê–í–°–ï–ì–î–ê (–ø–æ—Å–ª–µ bind –≤—Ç–æ—Ä–æ–π —Ä–∞–∑ bind –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç)

const obj = {
	name: 'Tom',
	say() {
		function inner() {
			// this —Ç—É—Ç –Ω–µ obj, –∞ window –∏–ª–∏ undefined
			console.log(this.name); // undefined
		}
		const innerArrow = () => {
			// this —Ç—É—Ç "—É–∫—Ä–∞–¥–µ–Ω" —É obj.say, —Ç–æ –µ—Å—Ç—å obj
			console.log(this.name); // 'Tom'
		};
		inner(); // undefined ! –ú—ã –≤—ã–∑—ã–≤–∞–µ–º –µ—ë –ø—Ä–æ—Å—Ç–æ –∫–∞–∫ inner(), –Ω–µ –∫–∞–∫ obj.inner() !!!
		innerArrow(); // Tom
	},
};

obj.say(); // Tom

var o = {
	name: 'Petr',
	f: function () {
		// --- –ó–¥–µ—Å—å this —Å—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ –æ–±—ä–µ–∫—Ç o, –µ—Å–ª–∏ –≤—ã–∑–æ–≤ —á–µ—Ä–µ–∑ o.f()
		const arrf = () => {
			// --- arrf –ó–ê–ú–´–ö–ê–ï–¢ (–∑–∞–ø–æ–º–∏–Ω–∞–µ—Ç) –∑–Ω–∞—á–µ–Ω–∏–µ this –∏–∑ f
			// --- –¢–æ –µ—Å—Ç—å arrf –≤—Å–µ–≥–¥–∞ –≤–µ—Ä–Ω—ë—Ç —Ç–æ, —á–µ–º—É —Ä–∞–≤–µ–Ω this –≤ f
			return this;
		};
		console.log(arrf()); // –í—ã–≤–µ–¥–µ—Ç –æ–±—ä–µ–∫—Ç o (–µ—Å–ª–∏ –≤—ã–∑–≤–∞–ª–∏ —á–µ—Ä–µ–∑ o.f()), –∏–Ω–∞—á–µ undefined
	},
};
// --- –ö–æ–ø–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
const func = o.f;
// --- –í—ã–∑–æ–≤ —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é (–∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ—Ç–µ—Ä—è–Ω)
console.log(func()); // –ó–¥–µ—Å—å this –≤–Ω—É—Ç—Ä–∏ f –±—É–¥–µ—Ç undefined (strict mode) –∏–ª–∏ window (–±–µ–∑ —Å—Ç—Ä–æ–≥–æ–≥–æ —Ä–µ–∂–∏–º–∞)
o.f(); // –ü–æ–∫–∞–∂–µ—Ç –æ–±—ä–µ–∫—Ç o

// —Å—Ç—Ä–æ–≥–∏–π —Ä–µ–∂–∏–º 'use string' —á—Ç–æ–±—ã –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç
function f() {
	console.log(this);
}
f();
// —á—Ç–æ –≤—ã–≤–µ–¥–µ—Ç? undefaned

(function () {
	console.log(this === window);
})();
// false –µ—Å–ª–∏ —Å 'use string' true - window

// –ö–∞–∫–∏–º –±—É–¥–µ—Ç –≤—ã–≤–æ–¥ —ç—Ç–æ–≥–æ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞ –∫–æ–¥–∞?
function fun() {
	this.x = 5;
	console.log(this); // {x: 5}
}
var o = new fw();
console.log(o.x); // 5

var oa = {
	fen: function () {
		return this;
	},
};
console.log(o.fen()); // { fen: [Function: fen] }
// —Å—Å—ã–ª–∞–µ–º—Å—è –Ω–∞ –Ω–∞—à –æ–±—å–µ–∫—Ç, this —Å—Å—ã–ª–∞–µ—Ç—å—Å—è –Ω–∞ –æ–±—å–µ–∫—Ç –≤ –∫–æ—Ç–æ—Ä–æ–º —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –µ—Å—Ç—å

function func() {
	console.log(this);
}
func.call(window); // window
func.call(func); // [Function: func]
// call –º–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞

function cale() {
	console.log(this.toString());
}
cale.call(123); // 123 —Å—Ç—Ä–æ–∫–∞

function userF() {
	console.log(this);
}

let user = {
	g: userF.bind(null),
};

user.g(); // null

// –≤–Ω—É—Ç—Ä–∏ setTimeout this ‚Äî undefined.
// –ü–æ—Ç–æ–º—É —á—Ç–æ setTimeout –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –Ω–µ –∫–∞–∫ –º–µ—Ç–æ–¥ –æ–±—ä–µ–∫—Ç–∞, –∞ ‚Äú—Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ‚Äù, –≥–¥–µ this ‚Äî –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç (window –≤ –±—Ä–∞—É–∑–µ—Ä–µ, global –≤ Node.js) –∏–ª–∏ undefined –≤ strict mode.

const userSet = {
	name: 'Kate',

	sayLater() {
		// this === user
		// setTimeout –≤—ã–∑—ã–≤–∞–µ—Ç –æ–±—ã—á–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é (function() {})
		setTimeout(function () {
			// –í–Ω—É—Ç—Ä–∏ –æ–±—ã—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è function() —Ç–µ—Ä—è–µ—Ç —Å–≤—è–∑—å —Å –æ–±—ä–µ–∫—Ç–æ–º user.
			// –ó–¥–µ—Å—å this - —ç—Ç–æ window (–∏–ª–∏ undefined –≤ strict mode),
			// –∞ –Ω–µ userSet! –ü–æ—ç—Ç–æ–º—É this.name === undefined
			console.log(this.name); // undefined
		}, 1000);
	},

	// –ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –¥–µ–ª–∞—Ç—å: –æ–±—ã—á–Ω–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç —Å—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (–æ–Ω–∏ ‚Äú–∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—Ç‚Äù –≤–Ω–µ—à–Ω–∏–π this):
	//   sayLater() {
	//   setTimeout(() => {
	//     console.log(this.name); // "Kate"
	//   }, 1000);
	// }

	//  sayLater() {
	//   const self = this; // –ò–ª–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç this –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
	//   setTimeout(function() {
	//     console.log(self.name); // "Kate"
	//   }, 1000);
	// }

	sayLaterArrow: () => {
		// –°—Ç—Ä–µ–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è userSet.sayLaterArrow, —É –Ω–µ—ë –Ω–µ—Ç —Å–≤–æ–µ–≥–æ this.
		// this –±–µ—Ä—ë—Ç—Å—è –∏–∑ –≤–Ω–µ—à–Ω–µ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ (–≥–ª–æ–±–∞–ª—å–Ω—ã–π scope –∏–ª–∏ undefined –≤ strict mode).
		setTimeout(() => {
			// –ó–¥–µ—Å—å this —Ç–∞–∫–∂–µ –≥–ª–æ–±–∞–ª—å–Ω—ã–π, –Ω–µ userSet.
			console.log(this.name); // undefined
		});
	},
};

userSet.sayLater(); // —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É –≤—ã–≤–µ–¥–µ—Ç: undefined
userSet.sayLaterArrow(); // —Å—Ä–∞–∑—É –≤—ã–≤–µ–¥–µ—Ç: undefined

// -- –∑–∞–¥–∞—á–∞
const userSetThis = {
	name: 'Kate',
	cbArrow: () => {
		// cbArrow - —ç—Ç–æ —Å—Ç—Ä–µ–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, —É –Ω–µ—ë –ù–ï–¢ —Å–≤–æ–µ–≥–æ this!
		// this –≤–æ–∑—å–º–µ—Ç—Å—è –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ (window –∏–ª–∏ undefined –≤ strict mode)
		console.log(this.name);
	},
	sayLater() {
		// sayLater - –æ–±—ã—á–Ω—ã–π –º–µ—Ç–æ–¥ –æ–±—ä–µ–∫—Ç–∞, this –≤–Ω—É—Ç—Ä–∏ —ç—Ç–æ–≥–æ –º–µ—Ç–æ–¥–∞ === userSetThis
		setTimeout(userSetThis.cbArrow, 0);
		// cbArrow - —Å—Ç—Ä–µ–ª–∫–∞, –≤—ã–∑–æ–≤–µ—Ç—Å—è —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º window/undefined
	},
	sayLaterArrow: () => {
		// sayLaterArrow - —Å–∞–º–∞ —Å—Ç—Ä–µ–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è! this = window (–∏–ª–∏ undefined)
		setTimeout(userSetThis.cbArrow, 0);
		// cbArrow —Ç–æ–∂–µ —Å—Ç—Ä–µ–ª–∫–∞, this –≤—Å—ë —Ä–∞–≤–Ω–æ window/undefined
	},
};

userSetThis.sayLater(); // undefined
userSetThis.sayLaterArrow(); // undefined

// –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç?
const btn = document.getElementById('btn');

// 1. –û–±—ã—á–Ω–∞—è function –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ
btn.addEventListener('click', function () {
	console.log(this); // üëâ –∑–¥–µ—Å—å this ‚Äî —ç—Ç–æ —Å–∞–º —ç–ª–µ–º–µ–Ω—Ç button!
});

// 2. –°—Ç—Ä–µ–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ
btn.addEventListener('click', () => {
	console.log(this); // üëâ –∑–¥–µ—Å—å this ‚Äî —ç—Ç–æ window (–∏–ª–∏ undefined –≤ strict)
});

// -- –∑–∞–¥–∞—á–∞ —Å class
// –°–æ–∑–¥–∞—ë–º –∫–ª–∞—Å—Å Animal
class Animal {
	// –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä: —Å—é–¥–∞ –ø–æ–ø–∞–¥–∞–µ—Ç –∏–º—è, –∫–æ–≥–¥–∞ —Å–æ–∑–¥–∞—ë–º Animal —á–µ—Ä–µ–∑ new
	constructor(name) {
		// constructor ‚Äî —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —á–µ—Ä–µ–∑ new Animal(...).
		this.name = name; // this —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç Animal
	}

	// –°—Ç—Ä–µ–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è! –í –∫–ª–∞—Å—Å–∞—Ö –æ–Ω–∞ —Å–æ–∑–¥–∞—ë—Ç—Å—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞,
	// –∏ –±–µ—Ä—ë—Ç this –∏–∑ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ (—Ç–æ –µ—Å—Ç—å dog –≤ –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ)
	speakArrow = () => {
		// this.name ‚Äî –±—É–¥–µ—Ç —Ä–∞–≤–Ω–æ 'Dog', –µ—Å–ª–∏ –≤—ã–∑–≤–∞–ª–∏ –Ω–∞ dog
		console.log(`${this.name} makes a sound. (—Å—Ç—Ä–µ–ª–æ—á–Ω–∞—è)`); // –ü–æ–¥—Å–∫–∞–∑–∫–∞!
	};

	// –û–±—ã—á–Ω—ã–π –º–µ—Ç–æ–¥ –∫–ª–∞—Å—Å–∞
	speak() {
		// this.name ‚Äî –±—É–¥–µ—Ç —Ä–∞–≤–Ω–æ 'Dog', –µ—Å–ª–∏ –≤—ã–∑–≤–∞–ª–∏ –Ω–∞ dog
		console.log(`${this.name} makes a sound. (–æ–±—ã—á–Ω—ã–π)`); // –ü–æ–¥—Å–∫–∞–∑–∫–∞!
	}
}

// –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ Animal —Å –∏–º–µ–Ω–µ–º Dog
const dog = new Animal('Dog');

// –í—ã–∑—ã–≤–∞–µ–º –æ–±—ã—á–Ω—ã–π –º–µ—Ç–æ–¥
dog.speak(); // –í—ã–≤–µ–¥–µ—Ç: Dog makes a sound. (–æ–±—ã—á–Ω—ã–π)

// –í—ã–∑—ã–≤–∞–µ–º —Å—Ç—Ä–µ–ª–æ—á–Ω—ã–π –º–µ—Ç–æ–¥
dog.speakArrow(); // –í—ã–≤–µ–¥–µ—Ç: Dog makes a sound. (—Å—Ç—Ä–µ–ª–æ—á–Ω–∞—è)

// –ü—Ä–∏ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏–∏ –º–µ—Ç–æ–¥–æ–≤ –∏–∑ –æ–±—ä–µ–∫—Ç–∞ this —Ç–µ—Ä—è–µ—Ç —Å–≤–æ–π –∫–æ–Ω—Ç–µ–∫—Å—Ç!
const userDes = {
	name: 'Helen',
	sayName() {
		console.log(this.name); // this —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –æ–±—ä–µ–∫—Ç, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –º–µ—Ç–æ–¥
	},
};

// –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è: –≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é sayName –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
const { sayName } = userDes;

// –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–¥–µ–ª—å–Ω–æ –æ—Ç –æ–±—ä–µ–∫—Ç–∞
sayName(); // undefined

// undefined * 3 ‚Äî —ç—Ç–æ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è, –≥–¥–µ –æ–¥–Ω–æ –∏–∑ –∑–Ω–∞—á–µ–Ω–∏–π undefined,
// –ø–æ—ç—Ç–æ–º—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç ‚Äî NaN (Not-a-Number)
const calculator = {
	value: 10,

	// –û–±—ã—á–Ω—ã–π –º–µ—Ç–æ–¥: this ‚Äî —ç—Ç–æ –æ–±—ä–µ–∫—Ç calculator
	double() {
		return this.value * 2; // –∑–¥–µ—Å—å this === calculator
	},

	// –°—Ç—Ä–µ–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è: –Ω–µ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ this
	triple: () => this.value * 3, // –∑–¥–µ—Å—å this –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ calculator!
};

console.log(calculator.double()); // 20
console.log(calculator.triple()); // NaN

// bind –Ω–∞ —Å—Ç—Ä–µ–ª–∫—É ‚Äî –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
const objNotBind = { value: 42 };

const getValue = () => this.value;
// –°—Ç—Ä–µ–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è! this –Ω–µ –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ—Ç—Å—è –∫ obj, –∞ –±–µ—Ä—ë—Ç—Å—è –∏–∑ –≤–Ω–µ—à–Ω–µ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ (window –∏–ª–∏ undefined)

const boundGetValue = getValue.bind(objNotBind);
// .bind(objNotBind) –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è —Å—Ç—Ä–µ–ª–æ—á–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π!
// –°—Ç—Ä–µ–ª–∫–∏ –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç bind/call/apply ‚Äî —É –Ω–∏—Ö —É–∂–µ "–∂—ë—Å—Ç–∫–æ" –∑–∞—à–∏—Ç –≤–Ω–µ—à–Ω–∏–π this.

console.log(boundGetValue()); // ?
// –†–µ–∑—É–ª—å—Ç–∞—Ç: undefined

function show() {
	console.log(this); // #1 undefined
}

show(); // #2 undefined

const usera = {
	name: 'Peter',
	greet() {
		console.log(`Hi ${this.name}`); // #3 Hi Peter
		show(); // #4 undefined
	},
};

usera.greet(); // #5 Hi Peter and undefined
