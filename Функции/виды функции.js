/**
 *  Function Declaration (традиционная)
 * Function Declaration — это способ объявления функции с помощью ключевого
 * слова function. Такие функции доступны в коде до их объявления благодаря
 * механизму "поднятия" (hoisting).
 * 
 * Особенности:
 * Можно вызывать функцию до её объявления благодаря hoisting'у.
 * Функция имеет имя, которое можно использовать для её вызова.
 * Поддерживаются параметры по умолчанию, а также необязательные параметры.
 */
function add(a, b) {
  return a + b;
}
console.log(add(2, 3));  // Вывод: 5


/**
 *  Function Expression (Функциональное выражение)
 * Function Expression — это функция, которая присваивается переменной. 
 * Такие функции не поднимаются в начале контекста выполнения, 
 * и их можно вызвать только после объявления.
 * 
 * Особенности:
 * Функцию нельзя вызывать до её объявления (нет hoisting'а).
 * Такие функции часто используются как анонимные (безымянные) функции, 
 * присваиваемые переменной.
 * Можно использовать именованные функциональные выражения, 
 * чтобы улучшить читаемость и дебаггинг.
 */

const subtract = function(a, b) {
  return a - b;
};
console.log(subtract(7, 3));  // Вывод: 4

// Пример с именованной функцией:
const multiply = function mult(a, b) {
  return a * b;
};
console.log(multiply(2, 4));  // Вывод: 8


//Стрелочные функции (Arrow Functions):
// Короткий синтаксис для объявления функций.
const numbers = [1, 2, 3, 4];
const squares = numbers.map((n) => n * n);
console.log(squares); // [1, 4, 9, 16]
 
/**
 * Стрелочные функции — мощный инструмент, который делает 
*  код лаконичным и удобным, особенно при работе с колбэками 
*  и в функциональном программировании.
 * 
 * Особенности:
 * Не имеют собственного ​​​​this​​​​, используют ​​​​this​​​​ внешней области видимости.
 * Имеют короче запись без ключевого слова function.
 * Нельзя использовать для создания объектов с помощью new.
 * Не имеют arguments.
 */

// явный возрат значения
const getSum = (a, b) => {
  const sum = a + b;
  return sum;
};
console.log(getSum(3, 7)); // 10


// Анонимные функции (Anonymous Functions):
// Функции без имени, часто используются как аргументы для других функций.
// 1
setTimeout(function() {
  console.log("Прошло 2 секунды");
}, 2000);

// 2
function fnWithCallback(callbackFunction) {
    callbackFunction()
}
fnWithCallback(anotherFunction)

// 3
function printMyName() {
    console.log("Katrin")
}
setTimeout(printMyName, 1000) // встроенная Fn